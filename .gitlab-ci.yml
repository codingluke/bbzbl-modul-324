# The Docker image that will be used to build your app
image: node:latest
# Functions that should be executed before the build script is run
before_script:
  - > 
    apt-get update && apt-get install -y --no-install-recommends 
    chromium 
    fonts-noto 
    && rm -rf /var/lib/apt/lists/*
  - > 
    apt-get update && 
    apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3
    libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4
    libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1
    libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6
    ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
  - yarn install --frozen-lockfile
pages:
  script:
    - yarn build
    - yarn build-marp && yarn run copy-marp-images
  artifacts:
    paths:
      # The folder that contains the files to be exposed at the Page URL
      - public
  rules:
    # This ensures that only pushes to the default branch will trigger
    # a pages deploy
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
